services:
  database:
    container_name: postgres
    image: postgres:15.1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: customer
    volumes:
      - db-volume:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - db-network
    restart: unless-stopped
  spring-boot-backend:
    container_name: spring-boot-backend
    image: michaelxsteinert/spring-boot-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://database:5432/customer
    ports:
      - "8080:8080"
    networks:
      - db-network
    depends_on:
      - database
    restart: unless-stopped
  react-frontend:
   container_name: react-frontend
   image: michaelxsteinert/react-frontend
   build:
     args:
       api_base_url: http://localhost:8080
     context: frontend/react
   port:
     - "5173:5173"
   depends_on:
     - spring-boot-backend
   restart: unless-stopped
networks:
  db-network:
    driver: bridge
volumes:
  db-volume: